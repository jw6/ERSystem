<?xml version="1.0" encoding="UTF-8"?>

<!-- XSD vs DTD -->
<!-- XSD: XML Schema Definition DTD: Document Type Definition These (xsd 
	& dtd) provide validation for whatever type of xml file you are trying to 
	write e.g. web.xml hibernate.cfg.xml pom.xml etc Well-formed vs Valid XML 
	well-formed: syntax is correct... Valid: is checked by an XSD or DTD file -->
 <!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!-- what properties does hibernate's sessionfactory need? JDBC Stuff: 
			url, username, password, driver New Hibernate Stuff: the dialect -->
		<property name="hibernate.connection.username">banking_db</property>
		<property name="hibernate.connection.password">p4ssw0rd</property>
		<property name="hibernate.connection.url">jdbc:oracle:thin:@localhost:1521:xe</property>
		<property name="hibernate.connection.driver_class">oracle.jdbc.driver.OracleDriver</property>
		
		<!--  <property name="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</property>
		<property name="hibernate.cache.use_second_level_cache">true</property>  -->
		
		<!-- New Hibernate stuff -->
		<property name="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</property>
		<property name="hibernate.show_sql">true</property>
		<property name="hibernate.hbm2ddl.auto">update</property> <!-- creates table from scratch -->
		<property name="hibernate.format_sql">true</property>


		<!-- Tell Hibernate where to look for ORMs -->
		<mapping class="com.revature.model.BankUser" />
		<mapping class="com.revature.model.BankAccount" />
		<mapping class="com.revature.model.BankTransaction" />
		<mapping class="com.revature.model.BankTransactionType" />
		
    	<!-- <mapping resource="bankUser.hbm.xml"/>  -->
		
	</session-factory>
</hibernate-configuration>